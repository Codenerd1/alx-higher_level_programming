============================
How to use 4-print_square.py
============================

This module defines a square-printing function ''print_square(size)''.

Usage
=====

Squares are printed using the ''#'' charachter while the ''size'' parameter 
represents the height and width of the square

::

	>>> print_square = __import__('4-print_square').print_square
	>>> print_square(1)
	#

::

	>>> print_square(4)
	####
	####
	####
	####

:

	>>> print_square(10)
	##########
	##########
	##########
	##########
	##########
	##########
	##########
	##########
	##########
	##########

If ''size'' is zero, the function prints nothing.

:

	>>> print_square(0)

Invalid sizes
=============

The parameter ''size'' must be an integer, otherwise a TypeError is raised.

:

	>>> print_square("not an int")
	Traceback(most recent call last):
	TypeError: size must be an integer

:

	>>> print_square(9.3)
        Traceback(most recent call last):
        TypeError: size must be an integer

:

	>>> print_square(None)
        Traceback(most recent call last):
        TypeError: size must be an integer

A ValueError is raised if ''size is less than zero

:

	>>> print_square(-9.3)
        Traceback(most recent call last):
        ValueError: size must be an >= 0

Note: value-checking only occurs after type-checking.

:

	>>> print_square(-9.3)
        Traceback(most recent call last):
        TypeError: size must be an integer

At least one argument must be provided.

:

	>>> print_square()
        Traceback(most recent call last):
        TypeError: print_square() missing a positional argument: 'size'
